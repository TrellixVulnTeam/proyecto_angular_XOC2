{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\59162\\\\Documents\\\\proyecto_angular\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { recognize } from 'tesseract.js';\nlet ExtraccionComponent = class ExtraccionComponent {\n  constructor(userservice) {\n    var _this = this;\n\n    this.userservice = userservice;\n    this.bandera = false;\n    this.cx = CanvasRenderingContext2D;\n    this.fileToUpload = null;\n    this.shortLink = \"\";\n    this.loading = false; // Flag variable    \n\n    this.datos_factura = {\n      name_empresa: '',\n      direccion: '',\n      telefono: '',\n      fecha_literal: '',\n      nit: '',\n      nombre_cliente: '',\n      valor_total_literal: '',\n      total_bruto: '',\n      total_descuento: '',\n      total_producto: '',\n      fecha_numerica: ''\n    };\n    this.tabla_contenido = [];\n\n    this.loadingProgress = logger => {\n      console.log(logger);\n    };\n\n    this.initializacion = /*#__PURE__*/_asyncToGenerator(function* () {\n      const carga = true;\n      const imageElement = _this.inputImage.nativeElement;\n      const {\n        data\n      } = yield recognize(imageElement, 'spa', {\n        logger: m => _this.loadingProgress(m)\n      });\n      console.log('laptamre', data.words);\n\n      _this.draw(data);\n    });\n\n    this.initSetup = () => {\n      const imageElement = this.inputImage.nativeElement;\n      const canvasElement = this.outputimage.nativeElement;\n      const that = this;\n\n      imageElement.onload = function () {\n        const {\n          naturalWidth,\n          naturalHeight\n        } = imageElement;\n        console.log(naturalWidth, naturalHeight);\n        that.cx = canvasElement.getContext('2d');\n        that.cx.lineWidth = 5;\n        that.cx.lineCap = 'square';\n        that.cx.strokeStyle = 'green';\n        canvasElement.width = naturalWidth;\n        canvasElement.height = naturalHeight;\n        console.log('initsetup');\n      };\n\n      this.initializacion();\n    };\n\n    this.draw = dataIn => {\n      dataIn.words.forEach(w => {\n        const bounding = w.bbox;\n        console.log(bounding);\n        this.cx.strokeStyle = 'green'; //falta ver que pasa con strokestyle\n\n        this.cx.strokeRect(bounding.x0, bounding.y0, bounding.x1 - bounding.x0, bounding.y1 - bounding.y0);\n        this.cx.beginPath();\n        this.cx.moveTo(w.baseline.x0, w.baseline.y0);\n        this.cx.lineTo(w.baseline.x1, w.baseline.y1);\n        this.cx.stroke();\n      });\n    };\n\n    this.pdfcargado = () => {\n      console.log('imagen lista');\n    };\n  }\n\n  ngOnChanges(changes) {\n    throw new Error('Method not implemented.');\n  }\n\n  ngOnInit() {// this.obtenerdatosJson();\n  }\n\n  onChange(event) {\n    this.file = event.target.files[0]; // this.pdfcargado();\n    // this.initializacion();\n\n    this.initSetup();\n  }\n\n  ngAfterViewInit() {}\n\n  enviardata() {\n    if (this.file) {\n      this.loading = !this.loading;\n      this.userservice.obtenerdatosjson(this.file).subscribe(resp => {\n        // console.log(resp.output[0].fields.date.valueData.text);\n        this.datos_factura.name_empresa = resp.output[0].fields.name_empresa.valueData.text;\n        console.log(resp.output[0].fields.name_empresa.valueData.text);\n        this.datos_factura.direccion = resp.output[0].fields.direccion.valueData.text;\n        this.datos_factura.telefono = resp.output[0].fields.telefono.valueData.text;\n        this.datos_factura.fecha_literal = resp.output[0].fields.fecha_literal.valueData.text;\n        this.datos_factura.nit = resp.output[0].fields.nit.valueData.text;\n        this.datos_factura.nombre_cliente = resp.output[0].fields.nombre_cliente.valueData.text;\n        this.datos_factura.valor_total_literal = resp.output[0].fields.valor_total_literal.valueData.text;\n        this.datos_factura.total_bruto = resp.output[0].fields.total_bruto.valueData.text;\n        this.datos_factura.total_descuento = resp.output[0].fields.total_descuento.valueData.text; // this.datos_factura.total_producto = resp.output[0].fields.total_producto.valueData.text\n\n        this.datos_factura.fecha_numerica = resp.output[0].fields.fecha_numerica.valueData.text;\n      });\n    } else {\n      alert(\"NO EXISTE UN ARCHIVO CARGADO!\");\n    }\n  }\n\n  enviardatatable() {\n    if (this.file) {\n      this.loading = !this.loading;\n      this.userservice.obtenerdatosjson(this.file).subscribe(resp => {\n        // console.log(resp.output[0].fields.date.valueData.text);\n        this.tabla_contenido = resp.output[0].fields.valores_tabla_contenido.value;\n        console.log(this.tabla_contenido.length);\n      });\n    } else {\n      alert(\"No existe archivo cargado para extraer contenido\");\n    }\n  }\n\n  handleFileInput(files) {\n    this.fileToUpload = files.item(0);\n  }\n\n};\n\n__decorate([ViewChild('inputImage')], ExtraccionComponent.prototype, \"inputImage\", void 0);\n\n__decorate([ViewChild('outputImage')], ExtraccionComponent.prototype, \"outputimage\", void 0);\n\nExtraccionComponent = __decorate([Component({\n  selector: 'app-extraccion',\n  templateUrl: './extraccion.component.html',\n  styleUrls: ['./extraccion.component.css']\n})], ExtraccionComponent);\nexport { ExtraccionComponent };","map":{"version":3,"sources":["C:/Users/59162/Documents/proyecto_angular/frontend/src/app/extraccion/extraccion.component.ts"],"names":["__decorate","Component","ViewChild","recognize","ExtraccionComponent","constructor","userservice","bandera","cx","CanvasRenderingContext2D","fileToUpload","shortLink","loading","datos_factura","name_empresa","direccion","telefono","fecha_literal","nit","nombre_cliente","valor_total_literal","total_bruto","total_descuento","total_producto","fecha_numerica","tabla_contenido","loadingProgress","logger","console","log","initializacion","carga","imageElement","inputImage","nativeElement","data","m","words","draw","initSetup","canvasElement","outputimage","that","onload","naturalWidth","naturalHeight","getContext","lineWidth","lineCap","strokeStyle","width","height","dataIn","forEach","w","bounding","bbox","strokeRect","x0","y0","x1","y1","beginPath","moveTo","baseline","lineTo","stroke","pdfcargado","ngOnChanges","changes","Error","ngOnInit","onChange","event","file","target","files","ngAfterViewInit","enviardata","obtenerdatosjson","subscribe","resp","output","fields","valueData","text","alert","enviardatatable","valores_tabla_contenido","value","length","handleFileInput","item","prototype","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { recognize } from 'tesseract.js';\r\nlet ExtraccionComponent = class ExtraccionComponent {\r\n    constructor(userservice) {\r\n        this.userservice = userservice;\r\n        this.bandera = false;\r\n        this.cx = CanvasRenderingContext2D;\r\n        this.fileToUpload = null;\r\n        this.shortLink = \"\";\r\n        this.loading = false; // Flag variable    \r\n        this.datos_factura = {\r\n            name_empresa: '',\r\n            direccion: '',\r\n            telefono: '',\r\n            fecha_literal: '',\r\n            nit: '',\r\n            nombre_cliente: '',\r\n            valor_total_literal: '',\r\n            total_bruto: '',\r\n            total_descuento: '',\r\n            total_producto: '',\r\n            fecha_numerica: '',\r\n        };\r\n        this.tabla_contenido = [];\r\n        this.loadingProgress = (logger) => {\r\n            console.log(logger);\r\n        };\r\n        this.initializacion = async () => {\r\n            const carga = true;\r\n            const imageElement = this.inputImage.nativeElement;\r\n            const { data } = await recognize(imageElement, 'spa', {\r\n                logger: m => this.loadingProgress(m)\r\n            });\r\n            console.log('laptamre', data.words);\r\n            this.draw(data);\r\n        };\r\n        this.initSetup = () => {\r\n            const imageElement = this.inputImage.nativeElement;\r\n            const canvasElement = this.outputimage.nativeElement;\r\n            const that = this;\r\n            imageElement.onload = function () {\r\n                const { naturalWidth, naturalHeight } = imageElement;\r\n                console.log(naturalWidth, naturalHeight);\r\n                that.cx = canvasElement.getContext('2d');\r\n                that.cx.lineWidth = 5;\r\n                that.cx.lineCap = 'square';\r\n                that.cx.strokeStyle = 'green';\r\n                canvasElement.width = naturalWidth;\r\n                canvasElement.height = naturalHeight;\r\n                console.log('initsetup');\r\n            };\r\n            this.initializacion();\r\n        };\r\n        this.draw = (dataIn) => {\r\n            dataIn.words.forEach(w => {\r\n                const bounding = w.bbox;\r\n                console.log(bounding);\r\n                this.cx.strokeStyle = 'green';\r\n                //falta ver que pasa con strokestyle\r\n                this.cx.strokeRect(bounding.x0, bounding.y0, bounding.x1 - bounding.x0, bounding.y1 - bounding.y0);\r\n                this.cx.beginPath();\r\n                this.cx.moveTo(w.baseline.x0, w.baseline.y0);\r\n                this.cx.lineTo(w.baseline.x1, w.baseline.y1);\r\n                this.cx.stroke();\r\n            });\r\n        };\r\n        this.pdfcargado = () => {\r\n            console.log('imagen lista');\r\n        };\r\n    }\r\n    ngOnChanges(changes) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    ngOnInit() {\r\n        // this.obtenerdatosJson();\r\n    }\r\n    onChange(event) {\r\n        this.file = event.target.files[0];\r\n        // this.pdfcargado();\r\n        // this.initializacion();\r\n        this.initSetup();\r\n    }\r\n    ngAfterViewInit() {\r\n    }\r\n    enviardata() {\r\n        if (this.file) {\r\n            this.loading = !this.loading;\r\n            this.userservice.obtenerdatosjson(this.file).subscribe((resp) => {\r\n                // console.log(resp.output[0].fields.date.valueData.text);\r\n                this.datos_factura.name_empresa = resp.output[0].fields.name_empresa.valueData.text;\r\n                console.log(resp.output[0].fields.name_empresa.valueData.text);\r\n                this.datos_factura.direccion = resp.output[0].fields.direccion.valueData.text;\r\n                this.datos_factura.telefono = resp.output[0].fields.telefono.valueData.text;\r\n                this.datos_factura.fecha_literal = resp.output[0].fields.fecha_literal.valueData.text;\r\n                this.datos_factura.nit = resp.output[0].fields.nit.valueData.text;\r\n                this.datos_factura.nombre_cliente = resp.output[0].fields.nombre_cliente.valueData.text;\r\n                this.datos_factura.valor_total_literal = resp.output[0].fields.valor_total_literal.valueData.text;\r\n                this.datos_factura.total_bruto = resp.output[0].fields.total_bruto.valueData.text;\r\n                this.datos_factura.total_descuento = resp.output[0].fields.total_descuento.valueData.text;\r\n                // this.datos_factura.total_producto = resp.output[0].fields.total_producto.valueData.text\r\n                this.datos_factura.fecha_numerica = resp.output[0].fields.fecha_numerica.valueData.text;\r\n            });\r\n        }\r\n        else {\r\n            alert(\"NO EXISTE UN ARCHIVO CARGADO!\");\r\n        }\r\n    }\r\n    enviardatatable() {\r\n        if (this.file) {\r\n            this.loading = !this.loading;\r\n            this.userservice.obtenerdatosjson(this.file).subscribe((resp) => {\r\n                // console.log(resp.output[0].fields.date.valueData.text);\r\n                this.tabla_contenido = resp.output[0].fields.valores_tabla_contenido.value;\r\n                console.log(this.tabla_contenido.length);\r\n            });\r\n        }\r\n        else {\r\n            alert(\"No existe archivo cargado para extraer contenido\");\r\n        }\r\n    }\r\n    handleFileInput(files) {\r\n        this.fileToUpload = files.item(0);\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('inputImage')\r\n], ExtraccionComponent.prototype, \"inputImage\", void 0);\r\n__decorate([\r\n    ViewChild('outputImage')\r\n], ExtraccionComponent.prototype, \"outputimage\", void 0);\r\nExtraccionComponent = __decorate([\r\n    Component({\r\n        selector: 'app-extraccion',\r\n        templateUrl: './extraccion.component.html',\r\n        styleUrls: ['./extraccion.component.css']\r\n    })\r\n], ExtraccionComponent);\r\nexport { ExtraccionComponent };\r\n"]},"metadata":{},"sourceType":"module"}