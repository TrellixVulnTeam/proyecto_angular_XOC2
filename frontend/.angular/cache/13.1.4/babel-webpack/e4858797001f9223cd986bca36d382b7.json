{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AlifeFileToBase64Module } from 'alife-file-to-base64';\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: JWT_OPTIONS,\n      useValue: JWT_OPTIONS\n    }, JwtHelperService //permite decodificar y verificar desde el aldo del servidor\n    ],\n    imports: [[BrowserModule, AppRoutingModule, FormsModule, HttpClientModule, AlifeFileToBase64Module, ReactiveFormsModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}